- name: disable default node js
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable node js
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs 
  ansible.builtin.dnf: 
    name: "{{ item }}"
    state: installed 
  loop: 
  - nodejs
  - mysql 

- name: create  the user 
  ansible.builtin.user:
    name: expense 

- name: create app directory
  ansible.builtin.file:
    path: /app 
    state: directory

- name: download the code 
  ansible.builtin.get_url: 
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest : /tmp/backend.zip 
    
- name: unzip the code 
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: install npm dependencies
  ansible.builtin.command: npm install 
  args: 
    chdir: /app 

- name: copy backend service 
  ansible.builtin.copy:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install python mysql dependencies 
  ansible.builtin.pip:
    name:
    - PyMySQL 
    - cryptography 
    executable: pip3.9 

- name: import the data into mysql 
  community.mysql.mysql_db:
    login_user: "{{login_user}}" 
    login_password: "{{ mysql_root_password }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    state: import  
    name: all

- name: daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true 

- name: start and enable backend service 
  ansible.builtin.service:
    name: backend 
    state: restarted 
    enabled: yes 